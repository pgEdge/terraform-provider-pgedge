definitions:
  AwsCredentials:
    properties:
      role_arn:
        type: string
    required:
    - role_arn
    type: object
  AzureCredentials:
    properties:
      client_id:
        type: string
      client_secret:
        type: string
      resource_group:
        type: string
      subscription_id:
        type: string
      tenant_id:
        type: string
    required:
    - tenant_id
    - subscription_id
    - client_id
    - client_secret
    type: object
  BackupConfig:
    properties:
      id:
        type: string
      node_name:
        type: string
      repositories:
        items:
          $ref: '#/definitions/Repository'
        type: array
      schedules:
        items:
          $ref: '#/definitions/Schedule'
        type: array
    type: object
  CloudAccount:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        format: uuid
        type: string
      name:
        type: string
      properties:
        additionalProperties: true
        type: object
      type:
        type: string
      updated_at:
        type: string
    required:
    - id
    - created_at
    - updated_at
    - name
    - type
    - properties
    type: object
  ClusterCreationRequest:
    properties:
      cloud_account:
        properties:
          id:
            format: uuid
            type: string
          name:
            type: string
          type:
            type: string
        type: object
      cloud_account_id:
        type: string
      firewall_rules:
        items:
          $ref: '#/definitions/FirewallRule'
        type: array
      name:
        type: string
      networks:
        items:
          $ref: '#/definitions/Network'
        type: array
      node_location:
        type: string
      nodes:
        items:
          $ref: '#/definitions/ClusterNode'
        type: array
      regions:
        items:
          type: string
        type: array
      resource_tags:
        additionalProperties:
          type: string
        type: object
      ssh_key_id:
        type: string
    type: object
  ClusterCreationResponse:
    properties:
      cloud_account:
        properties:
          id:
            type: string
          name:
            type: string
          type:
            type: string
        type: object
      created_at:
        format: date-time
        type: string
      firewall_rules:
        items:
          $ref: '#/definitions/FirewallRule'
        type: array
      id:
        format: uuid
        type: string
      name:
        type: string
      networks:
        items:
          $ref: '#/definitions/Network'
        type: array
      node_location:
        type: string
      nodes:
        items:
          $ref: '#/definitions/ClusterNode'
        type: array
      regions:
        items:
          type: string
        type: array
      resource_tags:
        additionalProperties:
          type: string
        type: object
      ssh_key_id:
        type: string
      status:
        type: string
    type: object
  ClusterDetails:
    properties:
      cloud_account:
        properties:
          id:
            format: uuid
            type: string
          name:
            type: string
          type:
            type: string
        type: object
      created_at:
        format: date-time
        type: string
      firewall_rules:
        items:
          $ref: '#/definitions/FirewallRule'
        type: array
      id:
        format: uuid
        type: string
      name:
        type: string
      networks:
        items:
          $ref: '#/definitions/Network'
        type: array
      node_location:
        type: string
      nodes:
        items:
          $ref: '#/definitions/ClusterNode'
        type: array
      regions:
        items:
          type: string
        type: array
      resource_tags:
        additionalProperties:
          type: string
        type: object
      ssh_key_id:
        type: string
      status:
        type: string
    type: object
  ClusterNode:
    properties:
      availability_zone:
        type: string
      image:
        type: string
      instance_type:
        type: string
      name:
        type: string
      options:
        items:
          type: string
        type: array
      region:
        type: string
      volume_iops:
        type: integer
      volume_size:
        type: integer
      volume_type:
        type: string
    type: object
  ClusterUpdateRequest:
    properties:
      firewall_rules:
        items:
          $ref: '#/definitions/FirewallRule'
        type: array
      networks:
        items:
          $ref: '#/definitions/Network'
        type: array
      nodes:
        items:
          $ref: '#/definitions/ClusterNode'
        type: array
      regions:
        items:
          type: string
        type: array
      resource_tags:
        additionalProperties:
          type: string
        type: object
      ssh_key_id:
        type: string
    type: object
  Column:
    properties:
      data_type:
        type: string
      default:
        type: string
      is_nullable:
        type: boolean
      is_primary_key:
        type: boolean
      name:
        type: string
      ordinal_position:
        type: integer
    type: object
  Component:
    properties:
      id:
        type: string
      name:
        type: string
      release_date:
        type: string
      status:
        type: string
      version:
        type: string
    type: object
  CreateCloudAccountInput:
    properties:
      credentials:
        additionalProperties: true
        type: object
      description:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - type
    - credentials
    type: object
  Database:
    properties:
      backups:
        properties:
          config:
            items:
              properties:
                id:
                  type: string
                node_name:
                  type: string
                repositories:
                  items:
                    properties:
                      base_path:
                        type: string
                      id:
                        type: integer
                      namespace:
                        type: string
                      retention_full:
                        type: integer
                      retention_full_type:
                        type: string
                      s3_bucket:
                        type: string
                      s3_region:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                schedules:
                  items:
                    properties:
                      cron_expression:
                        type: string
                      id:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
              type: object
            type: array
          provider:
            type: string
        type: object
      cluster_id:
        format: uuid
        type: string
      components:
        items:
          properties:
            id:
              type: string
            name:
              type: string
            release_date:
              type: string
            status:
              type: string
            version:
              type: string
          type: object
        type: array
      created_at:
        type: string
      domain:
        type: string
      extensions:
        properties:
          auto_manage:
            type: boolean
          available:
            items:
              type: string
            type: array
          requested:
            items:
              type: string
            type: array
        type: object
      id:
        format: uuid
        type: string
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/Node'
        type: array
      options:
        items:
          type: string
        type: array
      pg_version:
        type: string
      roles:
        items:
          properties:
            bypass_rls:
              type: boolean
            connection_limit:
              type: integer
            create_db:
              type: boolean
            create_role:
              type: boolean
            inherit:
              type: boolean
            login:
              type: boolean
            name:
              type: string
            replication:
              type: boolean
            superuser:
              type: boolean
          type: object
        type: array
      status:
        type: string
      storage_used:
        type: integer
      tables:
        items:
          properties:
            columns:
              items:
                properties:
                  data_type:
                    type: string
                  default:
                    type: string
                  is_nullable:
                    type: boolean
                  is_primary_key:
                    type: boolean
                  name:
                    type: string
                  ordinal_position:
                    type: integer
                type: object
              type: array
            name:
              type: string
            primary_key:
              items:
                type: string
              type: array
            replication_sets:
              items:
                type: string
              type: array
            schema:
              type: string
            status:
              items:
                properties:
                  aligned:
                    type: boolean
                  node_name:
                    type: string
                  present:
                    type: boolean
                  replicating:
                    type: boolean
                type: object
              type: array
          type: object
        type: array
      updated_at:
        type: string
    type: object
  DatabaseCreationRequest:
    properties:
      backups:
        properties:
          config:
            items:
              $ref: '#/definitions/BackupConfig'
            type: array
          provider:
            type: string
        type: object
      cluster_id:
        format: uuid
        type: string
      config_version:
        type: string
      extensions:
        properties:
          auto_manage:
            type: boolean
          available:
            items:
              type: string
            type: array
          requested:
            items:
              type: string
            type: array
        type: object
      name:
        type: string
      options:
        items:
          type: string
        type: array
    type: object
  DatabaseCreationResponse:
    properties:
      backups:
        $ref: '#/definitions/BackupConfig'
      cluster_id:
        format: uuid
        type: string
      components:
        items:
          $ref: '#/definitions/Component'
        type: array
      created_at:
        format: date-time
        type: string
      domain:
        type: string
      extensions:
        $ref: '#/definitions/Extensions'
      id:
        format: uuid
        type: string
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/Node'
        type: array
      options:
        items:
          type: string
        type: array
      pg_version:
        type: string
      roles:
        items:
          $ref: '#/definitions/Role'
        type: array
      status:
        type: string
      storage_used:
        format: integer
        type: string
      tables:
        items:
          $ref: '#/definitions/Table'
        type: array
      updated_at:
        format: date-time
        type: string
    type: object
  DatabaseDetails:
    properties:
      backups:
        properties:
          config:
            items:
              $ref: '#/definitions/BackupConfig'
            type: array
          provider:
            type: string
        type: object
      cluster_id:
        format: uuid
        type: string
      components:
        items:
          $ref: '#/definitions/Component'
        type: array
      created_at:
        format: date-time
        type: string
      domain:
        type: string
      extensions:
        properties:
          auto_manage:
            type: boolean
          available:
            items:
              type: string
            type: array
          requested:
            items:
              type: string
            type: array
        type: object
      id:
        format: uuid
        type: string
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/Node'
        type: array
      options:
        items:
          type: string
        type: array
      pg_version:
        type: string
      roles:
        items:
          $ref: '#/definitions/Role'
        type: array
      status:
        type: string
      storage_used:
        type: integer
      tables:
        items:
          $ref: '#/definitions/Table'
        type: array
      updated_at:
        format: date-time
        type: string
    type: object
  DatabaseScripts:
    properties:
      init:
        type: string
    type: object
  DatabaseUpdateRequest:
    properties:
      extensions:
        properties:
          auto_manage:
            type: boolean
          available:
            items:
              type: string
            type: array
          requested:
            items:
              type: string
            type: array
        type: object
      options:
        items:
          type: string
        type: array
    type: object
  Error:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  Extensions:
    properties:
      auto_manage:
        type: boolean
      available:
        items:
          type: string
        type: array
      requested:
        items:
          type: string
        type: array
    type: object
  FirewallRule:
    properties:
      name:
        type: string
      port:
        type: integer
      sources:
        items:
          type: string
        type: array
    type: object
  GoogleCredentials:
    properties:
      project_id:
        type: string
      provider:
        type: string
      service_account:
        type: string
    required:
    - project_id
    - service_account
    - provider
    type: object
  Network:
    properties:
      cidr:
        type: string
      external:
        type: boolean
      external_id:
        type: string
      name:
        type: string
      private_subnets:
        items:
          type: string
        type: array
      public_subnets:
        items:
          type: string
        type: array
      region:
        type: string
    type: object
  Node:
    properties:
      connection:
        properties:
          database:
            type: string
          external_ip_address:
            type: string
          host:
            type: string
          internal_host:
            type: string
          internal_ip_address:
            type: string
          password:
            type: string
          port:
            type: integer
          username:
            type: string
        type: object
      distance_measurement:
        properties:
          distance:
            type: number
          from_latitude:
            type: number
          from_longitude:
            type: number
          unit:
            type: string
        type: object
      extensions:
        properties:
          errors:
            properties:
              anim9ef:
                type: string
              enim3b:
                type: string
              laborum_d:
                type: string
              mollit267:
                type: string
            type: object
          installed:
            items:
              type: string
            type: array
        type: object
      location:
        properties:
          city:
            type: string
          code:
            type: string
          country:
            type: string
          latitude:
            type: number
          longitude:
            type: number
          metro_code:
            type: string
          name:
            type: string
          postal_code:
            type: string
          region:
            type: string
          region_code:
            type: string
          timezone:
            type: string
        type: object
      name:
        type: string
      region:
        properties:
          active:
            type: boolean
          availability_zones:
            items:
              type: string
            type: array
          cloud:
            type: string
          code:
            type: string
          name:
            type: string
          parent:
            type: string
        type: object
    type: object
  ReplicationResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  Repository:
    properties:
      base_path:
        type: string
      id:
        type: integer
      namespace:
        type: string
      retention_full:
        type: integer
      retention_full_type:
        type: string
      s3_bucket:
        type: string
      s3_region:
        type: string
      type:
        type: string
    type: object
  Role:
    properties:
      bypass_rls:
        type: boolean
      connection_limit:
        type: integer
      create_db:
        type: boolean
      create_role:
        type: boolean
      inherit:
        type: boolean
      login:
        type: boolean
      name:
        type: string
      replication:
        type: boolean
      superuser:
        type: boolean
    type: object
  Schedule:
    properties:
      cron_expression:
        type: string
      id:
        type: string
      type:
        type: string
    type: object
  Table:
    properties:
      columns:
        items:
          $ref: '#/definitions/Column'
        type: array
      name:
        type: string
      primary_key:
        items:
          type: string
        type: array
      replication_sets:
        items:
          type: string
        type: array
      schema:
        type: string
      status:
        items:
          $ref: '#/definitions/TableStatus'
        type: array
    type: object
  TableStatus:
    properties:
      aligned:
        type: boolean
      node_name:
        type: string
      present:
        type: boolean
      replicating:
        type: boolean
    type: object
info:
  title: pgEdge API
  version: 1.0.0
paths:
  /cloud-accounts:
    get:
      description: Lists cloud accounts known to pgEdge.
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: List cloud accounts response
          schema:
            items:
              $ref: '#/definitions/CloudAccount'
            type: array
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Authorization information is missing or invalid.
          schema:
            $ref: '#/definitions/Error'
      summary: Lists cloud accounts known to pgEdge.
    post:
      description: Onboard a new cloud account.
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: The cloud account details.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateCloudAccountInput'
      responses:
        '200':
          description: Response containing the cloud account details.
          schema:
            $ref: '#/definitions/CloudAccount'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Authorization information is missing or invalid.
          schema:
            $ref: '#/definitions/Error'
      summary: Onboard a new cloud account.
  /cloud-accounts/{id}:
    delete:
      description: Offboard a cloud account.
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the cloud account to offboard.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Empty response indicating that the cloud account was offboarded.
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Authorization information is missing or invalid.
          schema:
            $ref: '#/definitions/Error'
      summary: Offboard a cloud account.
    get:
      description: Retrieve a cloud account.
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the cloud account to retrieve.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Response containing the cloud account details.
          schema:
            $ref: '#/definitions/CloudAccount'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Authorization information is missing or invalid.
          schema:
            $ref: '#/definitions/Error'
      summary: Retrieve a cloud account.
  /clusters:
    get:
      description: Retrieve a list of clusters with optional limit and offset
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Number of clusters to retrieve (default is 10)
        format: int32
        in: query
        name: limit
        type: integer
      - description: Offset for pagination (default is 0)
        format: int32
        in: query
        name: offset
        type: integer
      responses:
        '200':
          description: Successful response
          schema:
            items:
              $ref: '#/definitions/ClusterDetails'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get All Clusters
    post:
      consumes:
      - application/json
      description: Create a new cluster with the specified options
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Cluster creation request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ClusterCreationRequest'
      produces:
      - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClusterCreationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Cluster
  /clusters/{id}:
    delete:
      description: Delete the cluster with the specified ID
      parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '204':
          description: No Content (successful deletion)
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete Cluster by ID
    get:
      description: Retrieve detailed information about a specific cluster
      parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClusterDetails'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get Cluster by ID
    patch:
      description: Update the cluster with the specified ID
      parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Cluster update request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ClusterUpdateRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClusterDetails'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update Cluster by ID
  /databases:
    get:
      description: Retrieve a list of all databases
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            items:
              $ref: '#/definitions/Database'
            type: array
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get All Databases
    post:
      consumes:
      - application/json
      description: Create a new database with the specified options
      parameters:
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Database creation request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DatabaseCreationRequest'
      produces:
      - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatabaseCreationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Database
  /databases/{id}:
    delete:
      description: Delete the database with the specified ID
      parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '204':
          description: No Content (successful deletion)
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Database
    get:
      description: Retrieve detailed information about a specific database
      parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatabaseDetails'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get Database by ID
    patch:
      description: Update the database with the specified ID
      parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Database creation request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DatabaseUpdateRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatabaseDetails'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a Database
  /databases/{id}/replicate:
    post:
      description: Replicate the database with the specified ID
      parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
      - format: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ReplicationResponse'
        '401':
          description: Unauthorized
        '404':
          description: Database not found
        '500':
          description: Internal Server Error
      summary: Replicate Database
  /oauth/token:
    post:
      consumes:
      - application/json
      description: Get an OAuth token using client credentials
      parameters:
      - description: Client credentials for obtaining the OAuth token
        in: body
        name: body
        required: true
        schema:
          properties:
            client_id:
              type: string
            client_secret:
              type: string
            grant_type:
              type: string
          type: object
      produces:
      - application/json
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              access_token:
                type: string
              expires_in:
                type: integer
              token_type:
                type: string
            type: object
        '400':
          description: Bad request
          schema:
            properties:
              code:
                type: integer
              message:
                type: string
            type: object
        '500':
          description: Internal Server Error
          schema:
            properties:
              code:
                type: integer
              message:
                type: string
            type: object
      summary: Obtain OAuth Token
swagger: '2.0'
