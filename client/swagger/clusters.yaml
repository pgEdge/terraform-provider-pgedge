paths:
  /clusters:
    get:
      summary: Lists existing pgEdge database clusters.
      description: Lists existing pgEdge database clusters.
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
        - name: limit
          in: query
          description: Maximum number of results to return.
          type: integer
        - name: offset
          in: query
          description: Offset into the results, for pagination.
          type: integer
      responses:
        "200":
          description: Response containing an array of clusters.
          schema:
            type: array
            items:
              $ref: "#/definitions/Cluster"
        "400":
          description: Bad request.
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Authorization information is missing or invalid.
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Creates a new pgEdge database cluster.
      description: Creates a new pgEdge database cluster.
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
        - in: body
          name: body
          description: The cluster definition.
          required: true
          schema:
            $ref: "#/definitions/CreateClusterInput"
      responses:
        "200":
          description: Response containing the cluster definition.
          schema:
            $ref: "#/definitions/Cluster"
        "400":
          description: Bad request.
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Authorization information is missing or invalid.
          schema:
            $ref: "#/definitions/Error"
  /clusters/{id}:
    get:
      summary: Retrieve a pgEdge database cluster given its ID.
      description: Retrieve a pgEdge database cluster given its ID.
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - name: id
          in: path
          description: ID of the cluster to retrieve.
          required: true
          type: string
          format: uuid
      responses:
        "200":
          description: Response containing the cluster definition.
          schema:
            $ref: "#/definitions/Cluster"
        "400":
          description: Bad request.
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Authorization information is missing or invalid.
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: Update a pgEdge database cluster.
      description: Update a pgEdge database cluster.
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - name: id
          in: path
          description: ID of the cluster to update.
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: The cluster definition.
          required: true
          schema:
            $ref: "#/definitions/UpdateClusterInput"
      responses:
        "200":
          description: Response containing the cluster definition.
          schema:
            $ref: "#/definitions/Cluster"
        "400":
          description: Bad request.
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Authorization information is missing or invalid.
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Deletes a pgEdge database cluster.
      description: Deletes a pgEdge database cluster.
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - name: id
          in: path
          description: ID of the cluster to delete.
          required: true
          type: string
          format: uuid
      responses:
        "204":
          description: Empty response indicating that the cluster was deleted.
        "400":
          description: Bad request.
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Authorization information is missing or invalid.
          schema:
            $ref: "#/definitions/Error"
  /clusters/{id}/nodes:
    get:
      summary: Lists nodes belonging to a specific cluster.
      description: Lists nodes belonging to a specific cluster.
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - name: id
          in: path
          description: ID of the cluster.
          required: true
          type: string
          format: uuid
        - name: near_lat
          in: query
          description: Latitude of the caller, when sorting by distance
          type: string
        - name: near_lon
          in: query
          description: Longitude of the caller, when sorting by distance
          type: string
        - name: order_by
          in: query
          description: Order by specification
          type: string
      responses:
        "200":
          description: Response containing the cluster nodes.
          schema:
            type: array
            items:
              $ref: "#/definitions/ClusterNode"
        "400":
          description: Bad request.
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Authorization information is missing or invalid.
          schema:
            $ref: "#/definitions/Error"
  /clusters/{id}/nodes/{node_id}/logs/{log_name}:
    get:
      summary: Retrieve messages from log file on a database node.
      description: Retrieve messages from log file on a database node.
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - name: id
          in: path
          description: ID of the cluster.
          required: true
          type: string
        - name: node_id
          in: path
          description: ID of the node.
          required: true
          type: string
        - name: log_name
          in: path
          description: Name of the log file.
          required: true
          type: string
        - name: lines
          in: query
          description: Number of lines to return.
          type: integer
        - name: since
          in: query
          description: Start showing entries on or newer than the specified date.
          type: string
        - name: until
          in: query
          description: Start showing entries on or older than the specified date.
          type: string
        - name: priority
          in: query
          description: Filter output by message priority.
          type: string
        - name: grep
          in: query
          description: Filter output to entries where the message field matches this regular expression.
          type: string
        - name: case_sensitive
          in: query
          description: Make pattern matching case sensitive or case insensitive.
          type: boolean
        - name: reverse
          in: query
          description: Reverse output so that the newest entries are displayed first.
          type: boolean
        - name: dmesg
          in: query
          description: Show only kernel messages.
          type: boolean
        - name: output
          in: query
          description: Controls the formatting of the journal entries that are shown.
          type: string
      responses:
        "200":
          description: Response containing log file messages
          schema:
            type: array
            items:
              $ref: "#/definitions/ClusterNodeLogMessage"
        "400":
          description: Bad request.
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Authorization information is missing or invalid.
          schema:
            $ref: "#/definitions/Error"

definitions:
  CreateClusterInput:
    type: object
    required:
      - name
      - regions
      - node_location
    properties:
      name:
        type: string
      cloud_account_id:
        type: string
      cloud_account:
        $ref: "#/definitions/CloudAccountProperties"
      ssh_key_id:
        type: string
      backup_store_ids:
        type: array
        items:
          type: string
      regions:
        type: array
        items:
          type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/ClusterNodeSettings"
      networks:
        type: array
        items:
          $ref: "#/definitions/ClusterNetworkSettings"
      firewall_rules:
        type: array
        items:
          $ref: "#/definitions/ClusterFirewallRuleSettings"
      node_location:
        type: string
      resource_tags:
        type: object
        additionalProperties:
          type: string
      capacity:
        type: integer
  UpdateClusterInput:
    type: object
    required:
      - regions
    properties:
      ssh_key_id:
        type: string
      regions:
        type: array
        items:
          type: string
      backup_store_ids:
        type: array
        items:
          type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/ClusterNodeSettings"
      networks:
        type: array
        items:
          $ref: "#/definitions/ClusterNetworkSettings"
      firewall_rules:
        type: array
        items:
          $ref: "#/definitions/ClusterFirewallRuleSettings"
      resource_tags:
        type: object
        additionalProperties:
          type: string
  ClusterNodeSettings:
    type: object
    required:
      - region
    properties:
      name:
        type: string
      region:
        type: string
      image:
        type: string
      availability_zone:
        type: string
      instance_type:
        type: string
      volume_size:
        type: integer
      volume_iops:
        type: integer
      volume_type:
        type: string
      options:
        type: array
        items:
          type: string
  ClusterNetworkSettings:
    type: object
    required:
      - region
    properties:
      name:
        type: string
      region:
        type: string
      cidr:
        type: string
      public_subnets:
        type: array
        items:
          type: string
      private_subnets:
        type: array
        items:
          type: string
      external:
        type: boolean
      external_id:
        type: string
  ClusterFirewallRuleSettings:
    type: object
    required:
      - port
      - sources
    properties:
      name:
        type: string
      port:
        type: integer
      sources:
        type: array
        items:
          type: string
  CloudAccountProperties:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
  Cluster:
    type: object
    required:
      - id
      - name
      - status
      - created_at
      - regions
      - cloud_account
      - node_location
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      status:
        type: string
      created_at:
        type: string
      regions:
        type: array
        items:
          type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/ClusterNodeSettings"
      networks:
        type: array
        items:
          $ref: "#/definitions/ClusterNetworkSettings"
      firewall_rules:
        type: array
        items:
          $ref: "#/definitions/ClusterFirewallRuleSettings"
      node_location:
        type: string
      resource_tags:
        type: object
        additionalProperties:
          type: string
      cloud_account:
        $ref: "#/definitions/CloudAccountProperties"
      ssh_key_id:
        type: string
      capacity:
        type: integer
      backup_store_ids:
        type: array
        items:
          type: string
  ClusterNode:
    type: object
    required:
      - id
      - availability_zone
      - image_id
      - instance_id
      - instance_type
      - ip_address
      - is_active
      - key_name
      - name
      - pg_version
      - region
      - region_detail
      - volume_size
      - volume_type
      - volume_iops
      - location
    properties:
      id:
        type: string
      availability_zone:
        type: string
      image_id:
        type: string
      instance_id:
        type: string
      instance_type:
        type: string
      ip_address:
        type: string
      public_ip_address:
        type: string
      is_active:
        type: boolean
      key_name:
        type: string
      name:
        type: string
      display_name:
        type: string
      pg_version:
        type: string
      volume_size:
        type: integer
      volume_type:
        type: string
      volume_iops:
        type: integer
      region:
        type: string
      region_detail:
        $ref: "#/definitions/Region"
      location:
        $ref: "#/definitions/Location"
      distance_measurement:
        $ref: "#/definitions/DistanceMeasurement"
  Location:
    type: object
    required:
      - latitude
      - longitude
    properties:
      code:
        type: string
      name:
        type: string
      country:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      city:
        type: string
      metro_code:
        type: string
      postal_code:
        type: string
      region:
        type: string
      region_code:
        type: string
      timezone:
        type: string
  DistanceMeasurement:
    type: object
    required:
      - distance
      - unit
      - from_latitude
      - from_longitude
    properties:
      distance:
        type: number
        format: double
      unit:
        type: string
      from_latitude:
        type: number
        format: double
      from_longitude:
        type: number
        format: double
  Region:
    type: object
    required:
      - cloud
      - code
      - name
      - availability_zones
    properties:
      cloud:
        type: string
      code:
        type: string
      parent:
        type: string
      name:
        type: string
      availability_zones:
        type: array
        items:
          type: string
      active:
        type: boolean
  ClusterNodeLogMessage:
    type: object
    required:
      - time
      - level
      - message
      - raw_text
    properties:
      time:
        type: string
      level:
        type: string
      message:
        type: string
      raw_text:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string