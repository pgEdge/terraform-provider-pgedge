paths:
  /tasks:
    get:
      summary: List tasks.
      description: List tasks.
      operationId: listTasks
      security:
        - AccessToken: []
      tags:
        - tasks
      parameters:
        - name: subject_id
          in: query
          description: Filter tasks by subject id.
          required: false
          schema:
            type: string
        - name: subject_kind
          in: query
          description: Filter tasks by kind.
          required: false
          schema:
            type: string
        - name: id
          in: query
          description: Filter tasks by id.
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter tasks by name.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter tasks by status.
          required: false
          schema:
            type: string
            enum:
              - queued
              - running
              - succeeded
              - failed
        - description: Maximum number of results to return.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Offset into the results for pagination.
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Response containing a list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Task:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - subject_kind
        - subject_id
        - name
        - messages
        - status
      properties:
        id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        subject_kind:
          type: string
        subject_id:
          type: string
        name:
          type: string
        status:
          type: string
        error:
          type: string
        request:
          type: object
          additionalProperties: {}
        response:
          type: object
          additionalProperties: {}
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    Message:
      type: object
      required:
        - time
        - level
        - text
      properties:
        time:
          type: string
        level:
          type: string
        text:
          type: string
        status:
          type: string
        step:
          type: string
        progress:
          type: integer
