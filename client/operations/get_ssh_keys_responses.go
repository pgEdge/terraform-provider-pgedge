// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pgEdge/terraform-provider-pgedge/client/models"
)

// GetSSHKeysReader is a Reader for the GetSSHKeys structure.
type GetSSHKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSSHKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSSHKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSSHKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSSHKeysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ssh-keys] GetSSHKeys", response, response.Code())
	}
}

// NewGetSSHKeysOK creates a GetSSHKeysOK with default headers values
func NewGetSSHKeysOK() *GetSSHKeysOK {
	return &GetSSHKeysOK{}
}

/*
GetSSHKeysOK describes a response with status code 200, with default header values.

List SSH keys response
*/
type GetSSHKeysOK struct {
	Payload []*models.SSHKey
}

// IsSuccess returns true when this get Ssh keys o k response has a 2xx status code
func (o *GetSSHKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Ssh keys o k response has a 3xx status code
func (o *GetSSHKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Ssh keys o k response has a 4xx status code
func (o *GetSSHKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Ssh keys o k response has a 5xx status code
func (o *GetSSHKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Ssh keys o k response a status code equal to that given
func (o *GetSSHKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Ssh keys o k response
func (o *GetSSHKeysOK) Code() int {
	return 200
}

func (o *GetSSHKeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ssh-keys][%d] getSshKeysOK %s", 200, payload)
}

func (o *GetSSHKeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ssh-keys][%d] getSshKeysOK %s", 200, payload)
}

func (o *GetSSHKeysOK) GetPayload() []*models.SSHKey {
	return o.Payload
}

func (o *GetSSHKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSSHKeysBadRequest creates a GetSSHKeysBadRequest with default headers values
func NewGetSSHKeysBadRequest() *GetSSHKeysBadRequest {
	return &GetSSHKeysBadRequest{}
}

/*
GetSSHKeysBadRequest describes a response with status code 400, with default header values.

Bad request.
*/
type GetSSHKeysBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Ssh keys bad request response has a 2xx status code
func (o *GetSSHKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Ssh keys bad request response has a 3xx status code
func (o *GetSSHKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Ssh keys bad request response has a 4xx status code
func (o *GetSSHKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Ssh keys bad request response has a 5xx status code
func (o *GetSSHKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Ssh keys bad request response a status code equal to that given
func (o *GetSSHKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Ssh keys bad request response
func (o *GetSSHKeysBadRequest) Code() int {
	return 400
}

func (o *GetSSHKeysBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ssh-keys][%d] getSshKeysBadRequest %s", 400, payload)
}

func (o *GetSSHKeysBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ssh-keys][%d] getSshKeysBadRequest %s", 400, payload)
}

func (o *GetSSHKeysBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSSHKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSSHKeysUnauthorized creates a GetSSHKeysUnauthorized with default headers values
func NewGetSSHKeysUnauthorized() *GetSSHKeysUnauthorized {
	return &GetSSHKeysUnauthorized{}
}

/*
GetSSHKeysUnauthorized describes a response with status code 401, with default header values.

Authorization information is missing or invalid.
*/
type GetSSHKeysUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Ssh keys unauthorized response has a 2xx status code
func (o *GetSSHKeysUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Ssh keys unauthorized response has a 3xx status code
func (o *GetSSHKeysUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Ssh keys unauthorized response has a 4xx status code
func (o *GetSSHKeysUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Ssh keys unauthorized response has a 5xx status code
func (o *GetSSHKeysUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Ssh keys unauthorized response a status code equal to that given
func (o *GetSSHKeysUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Ssh keys unauthorized response
func (o *GetSSHKeysUnauthorized) Code() int {
	return 401
}

func (o *GetSSHKeysUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ssh-keys][%d] getSshKeysUnauthorized %s", 401, payload)
}

func (o *GetSSHKeysUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ssh-keys][%d] getSshKeysUnauthorized %s", 401, payload)
}

func (o *GetSSHKeysUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSSHKeysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
