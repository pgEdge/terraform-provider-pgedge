// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetBackupStoresParams creates a new GetBackupStoresParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBackupStoresParams() *GetBackupStoresParams {
	return &GetBackupStoresParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBackupStoresParamsWithTimeout creates a new GetBackupStoresParams object
// with the ability to set a timeout on a request.
func NewGetBackupStoresParamsWithTimeout(timeout time.Duration) *GetBackupStoresParams {
	return &GetBackupStoresParams{
		timeout: timeout,
	}
}

// NewGetBackupStoresParamsWithContext creates a new GetBackupStoresParams object
// with the ability to set a context for a request.
func NewGetBackupStoresParamsWithContext(ctx context.Context) *GetBackupStoresParams {
	return &GetBackupStoresParams{
		Context: ctx,
	}
}

// NewGetBackupStoresParamsWithHTTPClient creates a new GetBackupStoresParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBackupStoresParamsWithHTTPClient(client *http.Client) *GetBackupStoresParams {
	return &GetBackupStoresParams{
		HTTPClient: client,
	}
}

/*
GetBackupStoresParams contains all the parameters to send to the API endpoint

	for the get backup stores operation.

	Typically these are written to a http.Request.
*/
type GetBackupStoresParams struct {

	// Authorization.
	//
	// Format: Bearer {access_token}
	Authorization string

	/* CreatedAfter.

	   Start time for backup stores retrieval as an RFC3339 timestamp.
	*/
	CreatedAfter *string

	/* CreatedBefore.

	   End time for backup stores retrieval as an RFC3339 timestamp.
	*/
	CreatedBefore *string

	/* Descending.

	   Whether to sort in descending order.
	*/
	Descending *bool

	/* Limit.

	   Maximum number of results to return.
	*/
	Limit *int64

	/* Offset.

	   Offset into the results, for pagination.
	*/
	Offset *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get backup stores params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBackupStoresParams) WithDefaults() *GetBackupStoresParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get backup stores params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBackupStoresParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get backup stores params
func (o *GetBackupStoresParams) WithTimeout(timeout time.Duration) *GetBackupStoresParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get backup stores params
func (o *GetBackupStoresParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get backup stores params
func (o *GetBackupStoresParams) WithContext(ctx context.Context) *GetBackupStoresParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get backup stores params
func (o *GetBackupStoresParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get backup stores params
func (o *GetBackupStoresParams) WithHTTPClient(client *http.Client) *GetBackupStoresParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get backup stores params
func (o *GetBackupStoresParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get backup stores params
func (o *GetBackupStoresParams) WithAuthorization(authorization string) *GetBackupStoresParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get backup stores params
func (o *GetBackupStoresParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithCreatedAfter adds the createdAfter to the get backup stores params
func (o *GetBackupStoresParams) WithCreatedAfter(createdAfter *string) *GetBackupStoresParams {
	o.SetCreatedAfter(createdAfter)
	return o
}

// SetCreatedAfter adds the createdAfter to the get backup stores params
func (o *GetBackupStoresParams) SetCreatedAfter(createdAfter *string) {
	o.CreatedAfter = createdAfter
}

// WithCreatedBefore adds the createdBefore to the get backup stores params
func (o *GetBackupStoresParams) WithCreatedBefore(createdBefore *string) *GetBackupStoresParams {
	o.SetCreatedBefore(createdBefore)
	return o
}

// SetCreatedBefore adds the createdBefore to the get backup stores params
func (o *GetBackupStoresParams) SetCreatedBefore(createdBefore *string) {
	o.CreatedBefore = createdBefore
}

// WithDescending adds the descending to the get backup stores params
func (o *GetBackupStoresParams) WithDescending(descending *bool) *GetBackupStoresParams {
	o.SetDescending(descending)
	return o
}

// SetDescending adds the descending to the get backup stores params
func (o *GetBackupStoresParams) SetDescending(descending *bool) {
	o.Descending = descending
}

// WithLimit adds the limit to the get backup stores params
func (o *GetBackupStoresParams) WithLimit(limit *int64) *GetBackupStoresParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get backup stores params
func (o *GetBackupStoresParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get backup stores params
func (o *GetBackupStoresParams) WithOffset(offset *int64) *GetBackupStoresParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get backup stores params
func (o *GetBackupStoresParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WriteToRequest writes these params to a swagger request
func (o *GetBackupStoresParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.CreatedAfter != nil {

		// query param created_after
		var qrCreatedAfter string

		if o.CreatedAfter != nil {
			qrCreatedAfter = *o.CreatedAfter
		}
		qCreatedAfter := qrCreatedAfter
		if qCreatedAfter != "" {

			if err := r.SetQueryParam("created_after", qCreatedAfter); err != nil {
				return err
			}
		}
	}

	if o.CreatedBefore != nil {

		// query param created_before
		var qrCreatedBefore string

		if o.CreatedBefore != nil {
			qrCreatedBefore = *o.CreatedBefore
		}
		qCreatedBefore := qrCreatedBefore
		if qCreatedBefore != "" {

			if err := r.SetQueryParam("created_before", qCreatedBefore); err != nil {
				return err
			}
		}
	}

	if o.Descending != nil {

		// query param descending
		var qrDescending bool

		if o.Descending != nil {
			qrDescending = *o.Descending
		}
		qDescending := swag.FormatBool(qrDescending)
		if qDescending != "" {

			if err := r.SetQueryParam("descending", qDescending); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
