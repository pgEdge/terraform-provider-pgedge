// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/pgEdge/terraform-provider-pgedge/client/models"
)

// NewPostSSHKeysParams creates a new PostSSHKeysParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostSSHKeysParams() *PostSSHKeysParams {
	return &PostSSHKeysParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostSSHKeysParamsWithTimeout creates a new PostSSHKeysParams object
// with the ability to set a timeout on a request.
func NewPostSSHKeysParamsWithTimeout(timeout time.Duration) *PostSSHKeysParams {
	return &PostSSHKeysParams{
		timeout: timeout,
	}
}

// NewPostSSHKeysParamsWithContext creates a new PostSSHKeysParams object
// with the ability to set a context for a request.
func NewPostSSHKeysParamsWithContext(ctx context.Context) *PostSSHKeysParams {
	return &PostSSHKeysParams{
		Context: ctx,
	}
}

// NewPostSSHKeysParamsWithHTTPClient creates a new PostSSHKeysParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostSSHKeysParamsWithHTTPClient(client *http.Client) *PostSSHKeysParams {
	return &PostSSHKeysParams{
		HTTPClient: client,
	}
}

/*
PostSSHKeysParams contains all the parameters to send to the API endpoint

	for the post SSH keys operation.

	Typically these are written to a http.Request.
*/
type PostSSHKeysParams struct {

	// Authorization.
	//
	// Format: Bearer {access_token}
	Authorization string

	/* Body.

	   The SSH key details.
	*/
	Body *models.CreateSSHKeyInput

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post SSH keys params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostSSHKeysParams) WithDefaults() *PostSSHKeysParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post SSH keys params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostSSHKeysParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post SSH keys params
func (o *PostSSHKeysParams) WithTimeout(timeout time.Duration) *PostSSHKeysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post SSH keys params
func (o *PostSSHKeysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post SSH keys params
func (o *PostSSHKeysParams) WithContext(ctx context.Context) *PostSSHKeysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post SSH keys params
func (o *PostSSHKeysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post SSH keys params
func (o *PostSSHKeysParams) WithHTTPClient(client *http.Client) *PostSSHKeysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post SSH keys params
func (o *PostSSHKeysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the post SSH keys params
func (o *PostSSHKeysParams) WithAuthorization(authorization string) *PostSSHKeysParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the post SSH keys params
func (o *PostSSHKeysParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithBody adds the body to the post SSH keys params
func (o *PostSSHKeysParams) WithBody(body *models.CreateSSHKeyInput) *PostSSHKeysParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post SSH keys params
func (o *PostSSHKeysParams) SetBody(body *models.CreateSSHKeyInput) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *PostSSHKeysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
