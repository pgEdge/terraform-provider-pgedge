// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pgEdge/terraform-provider-pgedge/client/models"
)

// PatchDatabasesIDReader is a Reader for the PatchDatabasesID structure.
type PatchDatabasesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchDatabasesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchDatabasesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchDatabasesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchDatabasesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchDatabasesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /databases/{id}] PatchDatabasesID", response, response.Code())
	}
}

// NewPatchDatabasesIDOK creates a PatchDatabasesIDOK with default headers values
func NewPatchDatabasesIDOK() *PatchDatabasesIDOK {
	return &PatchDatabasesIDOK{}
}

/*
PatchDatabasesIDOK describes a response with status code 200, with default header values.

Successful response
*/
type PatchDatabasesIDOK struct {
	Payload *models.DatabaseDetails
}

// IsSuccess returns true when this patch databases Id o k response has a 2xx status code
func (o *PatchDatabasesIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch databases Id o k response has a 3xx status code
func (o *PatchDatabasesIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch databases Id o k response has a 4xx status code
func (o *PatchDatabasesIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch databases Id o k response has a 5xx status code
func (o *PatchDatabasesIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch databases Id o k response a status code equal to that given
func (o *PatchDatabasesIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch databases Id o k response
func (o *PatchDatabasesIDOK) Code() int {
	return 200
}

func (o *PatchDatabasesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdOK  %+v", 200, o.Payload)
}

func (o *PatchDatabasesIDOK) String() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdOK  %+v", 200, o.Payload)
}

func (o *PatchDatabasesIDOK) GetPayload() *models.DatabaseDetails {
	return o.Payload
}

func (o *PatchDatabasesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DatabaseDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDatabasesIDBadRequest creates a PatchDatabasesIDBadRequest with default headers values
func NewPatchDatabasesIDBadRequest() *PatchDatabasesIDBadRequest {
	return &PatchDatabasesIDBadRequest{}
}

/*
PatchDatabasesIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchDatabasesIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch databases Id bad request response has a 2xx status code
func (o *PatchDatabasesIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch databases Id bad request response has a 3xx status code
func (o *PatchDatabasesIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch databases Id bad request response has a 4xx status code
func (o *PatchDatabasesIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch databases Id bad request response has a 5xx status code
func (o *PatchDatabasesIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch databases Id bad request response a status code equal to that given
func (o *PatchDatabasesIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the patch databases Id bad request response
func (o *PatchDatabasesIDBadRequest) Code() int {
	return 400
}

func (o *PatchDatabasesIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchDatabasesIDBadRequest) String() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchDatabasesIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDatabasesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDatabasesIDUnauthorized creates a PatchDatabasesIDUnauthorized with default headers values
func NewPatchDatabasesIDUnauthorized() *PatchDatabasesIDUnauthorized {
	return &PatchDatabasesIDUnauthorized{}
}

/*
PatchDatabasesIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchDatabasesIDUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch databases Id unauthorized response has a 2xx status code
func (o *PatchDatabasesIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch databases Id unauthorized response has a 3xx status code
func (o *PatchDatabasesIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch databases Id unauthorized response has a 4xx status code
func (o *PatchDatabasesIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch databases Id unauthorized response has a 5xx status code
func (o *PatchDatabasesIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch databases Id unauthorized response a status code equal to that given
func (o *PatchDatabasesIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the patch databases Id unauthorized response
func (o *PatchDatabasesIDUnauthorized) Code() int {
	return 401
}

func (o *PatchDatabasesIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchDatabasesIDUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchDatabasesIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDatabasesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDatabasesIDInternalServerError creates a PatchDatabasesIDInternalServerError with default headers values
func NewPatchDatabasesIDInternalServerError() *PatchDatabasesIDInternalServerError {
	return &PatchDatabasesIDInternalServerError{}
}

/*
PatchDatabasesIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchDatabasesIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch databases Id internal server error response has a 2xx status code
func (o *PatchDatabasesIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch databases Id internal server error response has a 3xx status code
func (o *PatchDatabasesIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch databases Id internal server error response has a 4xx status code
func (o *PatchDatabasesIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch databases Id internal server error response has a 5xx status code
func (o *PatchDatabasesIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch databases Id internal server error response a status code equal to that given
func (o *PatchDatabasesIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the patch databases Id internal server error response
func (o *PatchDatabasesIDInternalServerError) Code() int {
	return 500
}

func (o *PatchDatabasesIDInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchDatabasesIDInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /databases/{id}][%d] patchDatabasesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchDatabasesIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDatabasesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
