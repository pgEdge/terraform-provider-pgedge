// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pgEdge/terraform-provider-pgedge/client/models"
)

// DeleteCloudAccountsIDReader is a Reader for the DeleteCloudAccountsID structure.
type DeleteCloudAccountsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCloudAccountsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteCloudAccountsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCloudAccountsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCloudAccountsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cloud-accounts/{id}] DeleteCloudAccountsID", response, response.Code())
	}
}

// NewDeleteCloudAccountsIDNoContent creates a DeleteCloudAccountsIDNoContent with default headers values
func NewDeleteCloudAccountsIDNoContent() *DeleteCloudAccountsIDNoContent {
	return &DeleteCloudAccountsIDNoContent{}
}

/*
DeleteCloudAccountsIDNoContent describes a response with status code 204, with default header values.

Empty response indicating that the cloud account was offboarded.
*/
type DeleteCloudAccountsIDNoContent struct {
}

// IsSuccess returns true when this delete cloud accounts Id no content response has a 2xx status code
func (o *DeleteCloudAccountsIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete cloud accounts Id no content response has a 3xx status code
func (o *DeleteCloudAccountsIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cloud accounts Id no content response has a 4xx status code
func (o *DeleteCloudAccountsIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cloud accounts Id no content response has a 5xx status code
func (o *DeleteCloudAccountsIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cloud accounts Id no content response a status code equal to that given
func (o *DeleteCloudAccountsIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete cloud accounts Id no content response
func (o *DeleteCloudAccountsIDNoContent) Code() int {
	return 204
}

func (o *DeleteCloudAccountsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /cloud-accounts/{id}][%d] deleteCloudAccountsIdNoContent", 204)
}

func (o *DeleteCloudAccountsIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /cloud-accounts/{id}][%d] deleteCloudAccountsIdNoContent", 204)
}

func (o *DeleteCloudAccountsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCloudAccountsIDBadRequest creates a DeleteCloudAccountsIDBadRequest with default headers values
func NewDeleteCloudAccountsIDBadRequest() *DeleteCloudAccountsIDBadRequest {
	return &DeleteCloudAccountsIDBadRequest{}
}

/*
DeleteCloudAccountsIDBadRequest describes a response with status code 400, with default header values.

Bad request.
*/
type DeleteCloudAccountsIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cloud accounts Id bad request response has a 2xx status code
func (o *DeleteCloudAccountsIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cloud accounts Id bad request response has a 3xx status code
func (o *DeleteCloudAccountsIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cloud accounts Id bad request response has a 4xx status code
func (o *DeleteCloudAccountsIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cloud accounts Id bad request response has a 5xx status code
func (o *DeleteCloudAccountsIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cloud accounts Id bad request response a status code equal to that given
func (o *DeleteCloudAccountsIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete cloud accounts Id bad request response
func (o *DeleteCloudAccountsIDBadRequest) Code() int {
	return 400
}

func (o *DeleteCloudAccountsIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cloud-accounts/{id}][%d] deleteCloudAccountsIdBadRequest %s", 400, payload)
}

func (o *DeleteCloudAccountsIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cloud-accounts/{id}][%d] deleteCloudAccountsIdBadRequest %s", 400, payload)
}

func (o *DeleteCloudAccountsIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCloudAccountsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCloudAccountsIDUnauthorized creates a DeleteCloudAccountsIDUnauthorized with default headers values
func NewDeleteCloudAccountsIDUnauthorized() *DeleteCloudAccountsIDUnauthorized {
	return &DeleteCloudAccountsIDUnauthorized{}
}

/*
DeleteCloudAccountsIDUnauthorized describes a response with status code 401, with default header values.

Authorization information is missing or invalid.
*/
type DeleteCloudAccountsIDUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cloud accounts Id unauthorized response has a 2xx status code
func (o *DeleteCloudAccountsIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cloud accounts Id unauthorized response has a 3xx status code
func (o *DeleteCloudAccountsIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cloud accounts Id unauthorized response has a 4xx status code
func (o *DeleteCloudAccountsIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cloud accounts Id unauthorized response has a 5xx status code
func (o *DeleteCloudAccountsIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cloud accounts Id unauthorized response a status code equal to that given
func (o *DeleteCloudAccountsIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete cloud accounts Id unauthorized response
func (o *DeleteCloudAccountsIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteCloudAccountsIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cloud-accounts/{id}][%d] deleteCloudAccountsIdUnauthorized %s", 401, payload)
}

func (o *DeleteCloudAccountsIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cloud-accounts/{id}][%d] deleteCloudAccountsIdUnauthorized %s", 401, payload)
}

func (o *DeleteCloudAccountsIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCloudAccountsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
