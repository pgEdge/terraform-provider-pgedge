swagger: "2.0"
info:
  title: pgEdge API
  version: 1.0.0
paths:
  /oauth/token:
    post:
      summary: Obtain OAuth Token
      description: Get an OAuth token using client credentials
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Client credentials for obtaining the OAuth token
          required: true
          schema:
            type: object
            properties:
              client_id:
                type: string
              client_secret:
                type: string
              grant_type:
                type: string
      responses:
        "200":
          description: Successful response
          schema:
            type: object
            properties:
              token_type:
                type: string
              access_token:
                type: string
              expires_in:
                type: integer
        "400":
          description: Bad request
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        "500":
          description: Internal Server Error
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string

  /databases:
    get:
      summary: Get All Databases
      description: Retrieve a list of all databases
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Database"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"

    post:
      summary: Create a new Database
      description: Create a new database with the specified options
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - in: body
          name: body
          description: Database creation request body
          required: true
          schema:
            $ref: "#/definitions/DatabaseCreationRequest"
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/DatabaseCreationResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"

  /databases/{id}:
    get:
      summary: Get Database by ID
      description: Retrieve detailed information about a specific database
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/DatabaseDetails"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Delete a Database
      description: Delete the database with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "204":
          description: No Content (successful deletion)
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: Update a Database
      description: Update the database with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - in: body
          name: body
          description: Database creation request body
          required: true
          schema:
            $ref: "#/definitions/DatabaseUpdateRequest"
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/DatabaseDetails"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"

  /databases/{id}/replicate:
    post:
      summary: Replicate Database
      description: Replicate the database with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/ReplicationResponse"
        "401":
          description: Unauthorized
        "404":
          description: Database not found
        "500":
          description: Internal Server Error
  /clusters:
    get:
      summary: Get All Clusters
      description: Retrieve a list of clusters with optional limit and offset
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of clusters to retrieve (default is 10)
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset for pagination (default is 0)
      responses:
        "200":
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/ClusterDetails"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"

    post:
      summary: Create a new Cluster
      description: Create a new cluster with the specified options
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - in: body
          name: body
          description: Cluster creation request body
          required: true
          schema:
            $ref: "#/definitions/ClusterCreationRequest"
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/ClusterCreationResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"

  /clusters/{id}:
    get:
      summary: Get Cluster by ID
      description: Retrieve detailed information about a specific cluster
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/ClusterDetails"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"

    delete:
      summary: Delete Cluster by ID
      description: Delete the cluster with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "204":
          description: No Content (successful deletion)
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"
          
          
    patch:
      summary: Update Cluster by ID
      description: Update the cluster with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - in: body
          name: body
          description: Cluster update request body
          required: true
          schema:
            $ref: "#/definitions/ClusterUpdateRequest"
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/ClusterDetails"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Database:
    type: object
    properties:
      id:
        type: string
        format: uuid
      cluster_id:
        format: uuid
        type: string
      name:
        type: string
      status:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      backups:
        type: object
        properties:
          provider:
            type: string
          config:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                node_name:
                  type: string
                repositories:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      type:
                        type: string
                      base_path:
                        type: string
                      namespace:
                        type: string
                      retention_full:
                        type: integer
                      retention_full_type:
                        type: string
                      s3_bucket:
                        type: string
                      s3_region:
                        type: string
                schedules:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      cron_expression:
                        type: string
      components:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            version:
              type: string
            release_date:
              type: string
            status:
              type: string
      domain:
        type: string
      extensions:
        type: object
        properties:
          auto_manage:
            type: boolean
          available:
            type: array
            items:
              type: string
          requested:
            type: array
            items:
              type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/Node"
      options:
        type: array
        items:
          type: string
      pg_version:
        type: string
      roles:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            connection_limit:
              type: integer
            superuser:
              type: boolean
            create_role:
              type: boolean
            create_db:
              type: boolean
            login:
              type: boolean
            inherit:
              type: boolean
            replication:
              type: boolean
            bypass_rls:
              type: boolean
      storage_used:
        type: integer
      tables:
        type: array
        items:
          type: object
          properties:
            schema:
              type: string
            name:
              type: string
            primary_key:
              type: array
              items:
                type: string
            replication_sets:
              type: array
              items:
                type: string
            status:
              type: array
              items:
                type: object
                properties:
                  node_name:
                    type: string
                  present:
                    type: boolean
                  aligned:
                    type: boolean
                  replicating:
                    type: boolean
            columns:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  ordinal_position:
                    type: integer
                  data_type:
                    type: string
                  default:
                    type: string
                  is_nullable:
                    type: boolean
                  is_primary_key:
                    type: boolean

  ReplicationResponse:
    type: object
    properties:
      message:
        type: string
      status:
        type: string

  DatabaseDetails:
    type: object
    properties:
      id:
        format: uuid
        type: string
      cluster_id:
        format: uuid
        type: string
      name:
        type: string
      status:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      backups:
        type: object
        properties:
          provider:
            type: string
          config:
            type: array
            items:
              $ref: "#/definitions/BackupConfig"
      components:
        type: array
        items:
          $ref: "#/definitions/Component"
      domain:
        type: string
      extensions:
        type: object
        properties:
          auto_manage:
            type: boolean
          available:
            type: array
            items:
              type: string
          requested:
            type: array
            items:
              type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/Node"
      options:
        type: array
        items:
          type: string
      pg_version:
        type: string
      roles:
        type: array
        items:
          $ref: "#/definitions/Role"
      storage_used:
        type: integer
      tables:
        type: array
        items:
          $ref: "#/definitions/Table"

  DatabaseCreationRequest:
    type: object
    properties:
      name:
        type: string
      backups:
        type: object
        properties:
          provider:
            type: string
          config:
            type: array
            items:
              $ref: "#/definitions/BackupConfig"
      cluster_id:
        format: uuid
        type: string
      config_version:
        type: string
      extensions:
        type: object
        properties:
          auto_manage:
            type: boolean
          available:
            type: array
            items:
              type: string
          requested:
            type: array
            items:
              type: string
      options:
        type: array
        items:
          type: string

  DatabaseUpdateRequest:
    type: object
    properties:
      extensions:
        type: object
        properties:
          auto_manage:
            type: boolean
          available:
            type: array
            items:
              type: string
          requested:
            type: array
            items:
              type: string
      options:
        type: array
        items:
          type: string

  BackupConfig:
    type: object
    properties:
      id:
        type: string
      node_name:
        type: string
      repositories:
        type: array
        items:
          $ref: "#/definitions/Repository"
      schedules:
        type: array
        items:
          $ref: "#/definitions/Schedule"

  Repository:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
      base_path:
        type: string
      namespace:
        type: string
      retention_full:
        type: integer
      retention_full_type:
        type: string
      s3_bucket:
        type: string
      s3_region:
        type: string

  Schedule:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      cron_expression:
        type: string

  DatabaseCreationResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      cluster_id:
        type: string
        format: uuid
      name:
        type: string
      status:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      backups:
        $ref: "#/definitions/BackupConfig"
      components:
        type: array
        items:
          $ref: "#/definitions/Component"
      domain:
        type: string
      extensions:
        $ref: "#/definitions/Extensions"
      nodes:
        type: array
        items:
          $ref: "#/definitions/Node"
      options:
        type: array
        items:
          type: string
      pg_version:
        type: string
      roles:
        type: array
        items:
          $ref: "#/definitions/Role"
      storage_used:
        type: string
        format: integer
      tables:
        type: array
        items:
          $ref: "#/definitions/Table"

  Extensions:
    type: object
    properties:
      auto_manage:
        type: boolean
      available:
        type: array
        items:
          type: string
      requested:
        type: array
        items:
          type: string    
  Component:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      version:
        type: string
      release_date:
        type: string
      status:
        type: string

  Node:
    type: object
    properties:
      name:
        type: string
      connection:
        type: object
        properties:
          username:
            type: string
          password:
            type: string
          port:
            type: integer
          database:
            type: string
          external_ip_address:
            type: string
          host:
            type: string
          internal_host:
            type: string
          internal_ip_address:
            type: string
      location:
        type: object
        properties:
          latitude:
            type: number
          longitude:
            type: number
          city:
            type: string
          code:
            type: string
          country:
            type: string
          metro_code:
            type: string
          name:
            type: string
          postal_code:
            type: string
          region:
            type: string
          region_code:
            type: string
          timezone:
            type: string
      distance_measurement:
        type: object
        properties:
          distance:
            type: number
          unit:
            type: string
          from_latitude:
            type: number
          from_longitude:
            type: number
      extensions:
        type: object
        properties:
          installed:
            type: array
            items:
              type: string
          errors:
            type: object
            properties:
              mollit267:
                type: string
              enim3b:
                type: string
              laborum_d:
                type: string
              anim9ef:
                type: string
      region:
        type: object
        properties:
          cloud:
            type: string
          code:
            type: string
          name:
            type: string
          availability_zones:
            type: array
            items:
              type: string
          active:
            type: boolean
          parent:
            type: string

  Role:
    type: object
    properties:
      name:
        type: string
      connection_limit:
        type: integer
      superuser:
        type: boolean
      create_role:
        type: boolean
      create_db:
        type: boolean
      login:
        type: boolean
      inherit:
        type: boolean
      replication:
        type: boolean
      bypass_rls:
        type: boolean

  Table:
    type: object
    properties:
      schema:
        type: string
      name:
        type: string
      primary_key:
        type: array
        items:
          type: string
      replication_sets:
        type: array
        items:
          type: string
      status:
        type: array
        items:
          $ref: "#/definitions/TableStatus"
      columns:
        type: array
        items:
          $ref: "#/definitions/Column"

  TableStatus:
    type: object
    properties:
      node_name:
        type: string
      present:
        type: boolean
      aligned:
        type: boolean
      replicating:
        type: boolean

  Column:
    type: object
    properties:
      name:
        type: string
      ordinal_position:
        type: integer
      data_type:
        type: string
      default:
        type: string
      is_nullable:
        type: boolean
      is_primary_key:
        type: boolean

  Error:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string

  DatabaseScripts:
    type: object
    properties:
      init:
        type: string
          
  ClusterCreationRequest:
    type: object
    properties:
      name:
        type: string
      regions:
        type: array
        items:
          type: string
      node_location:
        type: string
      cloud_account:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          type:
            type: string
      cloud_account_id:
        type: string
      firewall_rules:
        type: array
        items:
          $ref: "#/definitions/FirewallRule"
      networks:
        type: array
        items:
          $ref: "#/definitions/Network"
      nodes:
        type: array
        items:
          $ref: "#/definitions/ClusterNode"
      resource_tags:
        type: object
        additionalProperties:
          type: string
      ssh_key_id:
        type: string

  ClusterCreationResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      status:
        type: string
      created_at:
        type: string
        format: date-time
      regions:
        type: array
        items:
          type: string
      cloud_account:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          type:
            type: string
      node_location:
        type: string
      firewall_rules:
        type: array
        items:
          $ref: "#/definitions/FirewallRule"
      networks:
        type: array
        items:
          $ref: "#/definitions/Network"
      nodes:
        type: array
        items:
          $ref: "#/definitions/ClusterNode"
      resource_tags:
        type: object
        additionalProperties:
          type: string
      ssh_key_id:
        type: string

  ClusterDetails:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      status:
        type: string
      created_at:
        type: string
        format: date-time
      regions:
        type: array
        items:
          type: string
      cloud_account:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          type:
            type: string
      node_location:
        type: string
      firewall_rules:
        type: array
        items:
          $ref: "#/definitions/FirewallRule"
      networks:
        type: array
        items:
          $ref: "#/definitions/Network"
      nodes:
        type: array
        items:
          $ref: "#/definitions/ClusterNode"
      resource_tags:
        type: object
        additionalProperties:
          type: string
      ssh_key_id:
        type: string

  ClusterNode:
    type: object
    properties:
      region:
        type: string
      availability_zone:
        type: string
      image:
        type: string
      instance_type:
        type: string
      name:
        type: string
      options:
        type: array
        items:
          type: string
      volume_iops:
        type: integer
      volume_size:
        type: integer
      volume_type:
        type: string

  FirewallRule:
    type: object
    properties:
      port:
        type: integer
      sources:
        type: array
        items:
          type: string
      name:
        type: string

  Network:
    type: object
    properties:
      region:
        type: string
      cidr:
        type: string
      external:
        type: boolean
      external_id:
        type: string
      name:
        type: string
      private_subnets:
        type: array
        items:
          type: string
      public_subnets:
        type: array
        items:
          type: string

  ClusterUpdateRequest:
    type: object
    properties:
      regions:
        type: array
        items:
          type: string
      firewall_rules:
        type: array
        items:
          $ref: "#/definitions/FirewallRule"
      networks:
        type: array
        items:
          $ref: "#/definitions/Network"
      nodes:
        type: array
        items:
          $ref: "#/definitions/ClusterNode"
      resource_tags:
        type: object
        additionalProperties:
          type: string
      ssh_key_id:
        type: string