swagger: "2.0"
info:
  title: pgEdge API
  version: 1.0.0
paths:
  /oauth/token:
    post:
      summary: Obtain OAuth Token
      description: Get an OAuth token using client credentials
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Client credentials for obtaining the OAuth token
          required: true
          schema:
            type: object
            properties:
              client_id:
                type: string
              client_secret:
                type: string
      responses:
        "200":
          description: Successful response
          schema:
            type: object
            properties:
              access_token:
                type: string
              token_type:
                type: string
              expires_in:
                type: integer
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /databases:
    get:
      summary: Get All Databases
      description: Retrieve a list of all databases
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Database"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      summary: Create a new Database
      description: Create a new database with the specified options
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - in: body
          name: body
          description: Database creation request body
          required: true
          schema:
            $ref: "#/definitions/DatabaseCreationRequest"
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/DatabaseCreationResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /databases/{id}:
    get:
      summary: Get Database by ID
      description: Retrieve detailed information about a specific database
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/DatabaseDetails"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    delete:
      summary: Delete a Database
      description: Delete the database with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "204":
          description: No Content (successful deletion)
        "401":
          description: Unauthorized
        "404":
          description: Database not found
        "500":
          description: Internal Server Error

  /databases/{id}/replicate:
    post:
      summary: Replicate Database
      description: Replicate the database with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/ReplicationResponse"
        "401":
          description: Unauthorized
        "404":
          description: Database not found
        "500":
          description: Internal Server Error
  /clusters:
    get:
      summary: Get All Clusters
      description: Retrieve a list of clusters with optional limit and offset
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of clusters to retrieve (default is 10)
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset for pagination (default is 0)
      responses:
        "200":
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/ClusterDetails"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      summary: Create a new Cluster
      description: Create a new cluster with the specified options
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
        - in: body
          name: body
          description: Cluster creation request body
          required: true
          schema:
            $ref: "#/definitions/ClusterCreationRequest"
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/ClusterCreationResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /clusters/{id}:
    get:
      summary: Get Cluster by ID
      description: Retrieve detailed information about a specific cluster
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/ClusterDetails"
        "401":
          description: Unauthorized
        "404":
          description: Cluster not found
        "500":
          description: Internal Server Error
    delete:
      summary: Delete Cluster by ID
      description: Delete the cluster with the specified ID
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: Authorization
          in: header
          type: string
          format: Bearer {access_token}
          required: true
      responses:
        "204":
          description: No Content (successful deletion)
        "401":
          description: Unauthorized
        "404":
          description: Cluster not found
        "500":
          description: Internal Server Error

definitions:
  Database:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      domain:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/Node"
      status:
        type: string
      updated_at:
        type: string
        format: date-time
  ReplicationResponse:
    type: object
    properties:
      message:
        type: string
      status:
        type: string

  DatabaseDetails:
    type: object
    properties:
      components:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            release_date:
              type: string
              format: date
            status:
              type: string
            version:
              type: string
      created_at:
        type: string
        format: date-time
      id:
        type: string
        format: uuid
      name:
        type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/Node"
      pg_version:
        type: string
      roles:
        type: array
        items:
          type: object
          properties:
            bypass_rls:
              type: boolean
            connection_limit:
              type: integer
            create_db:
              type: boolean
            create_role:
              type: boolean
            inherit:
              type: boolean
            login:
              type: boolean
            name:
              type: string
            replication:
              type: boolean
            superuser:
              type: boolean
      status:
        type: string
      storage_used:
        type: integer
      tables:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            primary_key:
              type: array
              items:
                type: string
            replication_sets:
              type: object
            schema:
              type: string
            status:
              type: array
              items:
                type: object
                properties:
                  aligned:
                    type: boolean
                  node_name:
                    type: string
                  present:
                    type: boolean
                  replicating:
                    type: boolean
      updated_at:
        type: string
        format: date-time

  DatabaseCreationRequest:
    type: object
    properties:
      name:
        type: string
      cluster_id:
        type: string
      options:
        type: array
        items:
          type: string

  DatabaseCreationResponse:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      domain:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      nodes:
        type: array
        items:
          $ref: "#/definitions/Node"
      status:
        type: string
      updated_at:
        type: string
        format: date-time
  Node:
    type: object
    properties:
      connection:
        type: object
        properties:
          database:
            type: string
          host:
            type: string
          password:
            type: string
          port:
            type: integer
          username:
            type: string
      location:
        type: object
        properties:
          code:
            type: string
          country:
            type: string
          latitude:
            type: number
          longitude:
            type: number
          name:
            type: string
          region:
            type: string
          region_code:
            type: string
      name:
        type: string
  ClusterCreationRequest:
    type: object
    properties:
      name:
        type: string
      node_groups:
        type: object
        properties:
          aws:
            type: array
            items:
              type: object
              # properties:
                # availability_zones:
                #   type: array
                #   items:
                #     type: string
                # cidr:
                #   type: string
                # instance_type:
                #   type: string
                # node_location:
                #   type: string
                # nodes:
                #   type: array
                #   items:
                #     type: object
                #     properties:
                #       display_name:
                #         type: string
                #       is_active:
                #         type: boolean
                # public_subnets:
                #   type: array
                #   items:
                #     type: string
                # region:
                #   type: string
                # volume_size:
                #   type: integer
                # volume_type:
                #   type: string
          azure:
            type: array
            items:
              type: object
              # properties:
                # Define Azure-specific properties here
          google:
            type: array
            items:
              type: object
              # properties:
                # Define Google-specific properties here
      firewall:
        type: object
        properties:
          rules:
            type: array
            items:
              type: object
              properties:
                port:
                  type: integer
                sources:
                  type: array
                  items:
                    type: string
                type:
                  type: string
      cloud_account_id:
        type: string

  ClusterCreationResponse:
    type: object
    properties:
      aws:
        type: object
        properties:
          role_arn:
            type: string
      cloud_account_id:
        type: string
      created_at:
        type: string
        format: date-time
      database:
        type: object
        properties:
          name:
            type: string
          pg_version:
            type: string
          scripts:
            type: object
          username:
            type: string
      firewall:
        type: object
        properties:
          rules:
            type: array
            items:
              type: object
              properties:
                port:
                  type: integer
                sources:
                  type: array
                  items:
                    type: string
                type_:
                  type: string
      id:
        type: string
      name:
        type: string
      node_groups:
        type: object
        properties:
          aws:
            type: array
            items:
              type: object
          azure:
            type: array
            items:
              type: object
          google:
            type: array
            items:
              type: object
      status:
        type: string
  ClusterDetails:
    type: object
    properties:
      aws:
        type: object
        properties:
          role_arn:
            type: string
      cloud_account_id:
        type: string
      created_at:
        type: string
        format: date-time
      database:
        type: object
        properties:
          name:
            type: string
          pg_version:
            type: string
          scripts:
            type: object
          username:
            type: string
      firewall:
        type: object
        properties:
          rules:
            type: array
            items:
              type: object
              properties:
                port:
                  type: integer
                sources:
                  type: array
                  items:
                    type: string
                type:
                  type: string
      id:
        type: string
      name:
        type: string
      node_groups:
        type: object
        properties:
          aws:
            type: array
            items:
              type: object
          azure:
            type: array
            items:
              type: object
          google:
            type: array
            items:
              type: object
      status:
        type: string